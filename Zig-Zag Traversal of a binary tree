class Solution{
	/*
	class TreeNode{
	int data;
	TreeNode left;
	TreeNode right;

	TreeNode(int data){
		this.data = data;
		this.left = null;
		this.right = null;
	}
	*/
	public List<List<Integer>> zigzagTraversal(TreeNode root){
		//write your code here.
		List<List<Integer>> list = new ArrayList<>();
		Queue<TreeNode> queue = new LinkedList<>();
		queue.add(root);
		int count =0;
		while(queue.size() != 0){
		    List<Integer> l = new ArrayList<>();
		    int len = queue.size();
		    for(int i =0;i<len;i++){
		        TreeNode r = queue.remove();
		        l.add(r.data);
		        if(r.left != null){
		            queue.add(r.left);
		        }
		        if(r.right != null ){
		            queue.add(r.right);
		        }
		    }
		    if(count%2 ==1){
		        Collections.reverse(l);
		        list.add(l);
		    }else{
		           list.add(l);
		    }
		 
		    count++;
		}
		return list;
		
	}
}
